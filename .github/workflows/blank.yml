# Github Action for updates to this repository

name: test
on:
  # run every 5~10 minutes (min Github scheduling allowed)
  # note this may not complete when the hourly "CVE Release" workflow starts,
  #   so that the updates in this task may not be reflected
  #   in the CVE Release artifacts running in a separate workflow
  # note also that if this job runs longer than 5 minutes,
  #   the next job will run 5 minutes after this completes
  # Enables manual runs of this workflow from the Actions tab
  workflow_dispatch:
    inputs:
      # logLevel:
      #   description: 'Log level'
      #   required: false
      #   default: 'debug'
      params:
        description: 'command line arguments to update'
        required: false
        default: ''
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  update-cves:
    permissions:
      contents: write
    environment: deployment
    runs-on: ubuntu-latest
    env:
      CVES_BASE_DIRECTORY: cves
      CVES_RECENT_ACTIVITIES_FILENAME: recent_activities.json
      CVES_DEFAULT_UPDATE_LOOKBACK_IN_MINS: 180
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Update CVEs
        run: |
          export TEMP_TIMESTAMP=$(date '+%Y-%m-%d_%H%M_UTC')
          echo "out=$TEMP_TIMESTAMP" >> $GITHUB_OUTPUT
          # git pull # no git pull bc that defeats the purpose of optimizing
          git config --global user.email "github_action@example.com"
          git config --global user.name "cvelistV5 Github Action - optimized"
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/${{github.repository}}.git
          # evaluate the last fetch time
          echo `$CVES_BASE_DIRECTORY/delta.json`
          echo `$(cat $CVES_BASE_DIRECTORY/delta.json)`
          echo `$(fromJson(cat $CVES_BASE_DIRECTORY/delta.json))`
          #LAST_FETCH_TIME=$(jq -c . < $CVES_BASE_DIRECTORY/delta.json)" >> $GITHUB_ENV
          #node ./.github/workflows/dist/index.js update ${{ github.event.inputs.params }} 
          #git push
      # - name: output
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #         core.notice("this is a notice")
